<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>set_BidtTeam_Owner</name>
        <label>set BidTeam Owner</label>
        <locationX>578</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Bid_Team_Queue.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>set_New_Verticals_Owner</name>
        <label>set New Verticals Owner</label>
        <locationX>50</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>New_Verticals_Queue.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>setPastDue_Owner</name>
        <label>set PastDue Owner</label>
        <locationX>314</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PastDue_Queue.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Check_RecordType</name>
        <label>Check RecordType</label>
        <locationX>446</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsNewVerticalsCase</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PastDueCase</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.TaskType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>POOLCLEANING</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.TaskType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SALESCLEAN</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>New_Verticals_Queue</targetReference>
            </connector>
            <label>IsNewVerticals</label>
        </rules>
        <rules>
            <name>isPastDueCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PastDueCase</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PastDue_Queue</targetReference>
            </connector>
            <label>isPastDueCase</label>
        </rules>
        <rules>
            <name>IsInAppAdditional</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bid_Process_Details</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Overgrowth Approval Required</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In-App</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Bid_Team_Queue</targetReference>
            </connector>
            <label>IsInAppAdditional</label>
        </rules>
    </decisions>
    <interviewLabel>Case - Before - Case Assignment {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Before - Assignment</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Bid_Team_Queue</name>
        <label>Bid Team Queue</label>
        <locationX>578</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>set_BidtTeam_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Bid_Team</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>New_Verticals_Queue</name>
        <label>New Verticals Queue</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>set_New_Verticals_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New_Verticals_Team</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>PastDue_Queue</name>
        <label>PastDue Queue</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>setPastDue_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Past_Due</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_RecordType</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
