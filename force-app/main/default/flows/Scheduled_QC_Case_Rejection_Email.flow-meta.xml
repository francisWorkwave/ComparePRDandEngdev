<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Post_to_Chatter</name>
        <label>Post to Chatter</label>
        <locationX>50</locationX>
        <locationY>972</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>ChatterText</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Send_Rejection_email</name>
        <label>Send Rejection Email</label>
        <locationX>50</locationX>
        <locationY>852</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Post_to_Chatter</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailText</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>no-reply@taskeasy.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Property Follow-Up Required</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>Assign_Case_Display_Text</name>
        <label>Assign Case Display Text</label>
        <locationX>138</locationX>
        <locationY>636</locationY>
        <assignmentItems>
            <assignToReference>caseCount</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailAddressList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AddressReasonTemplate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ChatterAddressList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AddressTemplate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopCases</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Do_Cases_Exist</name>
        <label>Do Cases Exist?</label>
        <locationX>182</locationX>
        <locationY>396</locationY>
        <defaultConnectorLabel>No Cases</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Cases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LoopCases</targetReference>
            </connector>
            <label>Cases Exist</label>
        </rules>
    </decisions>
    <interviewLabel>Scheduled QC Case Rejection Email {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Scheduled QC Case Rejection Email</label>
    <loops>
        <name>LoopCases</name>
        <label>LoopCases</label>
        <locationX>50</locationX>
        <locationY>516</locationY>
        <collectionReference>Get_Cases</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Case_Display_Text</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Send_Rejection_email</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Cases</name>
        <label>Get Cases</label>
        <locationX>182</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Do_Cases_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContactId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Reason</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Reject</stringValue>
            </value>
        </filters>
        <filters>
            <field>Case_Resolution_Reason__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>QC Second Chance Job Created</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Closed_Today__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0126g0000010fhsAAA</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Address__c</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>ContactId</queriedFields>
        <queriedFields>QC_Rejection_Reasons_Formatted__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Cases</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND (3 OR 4)</filterLogic>
        <filters>
            <field>Email</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0126g000000tbKoAAI</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0126g000000tbKtAAI</stringValue>
            </value>
        </filters>
        <object>Contact</object>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2021-05-14</startDate>
            <startTime>17:30:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>AddressReasonTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;ul&gt;&lt;li&gt;{!LoopCases.Address__c} Reason: {!LoopCases.QC_Rejection_Reasons_Formatted__c}&lt;/li&gt;&lt;/ul&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>AddressTemplate</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!LoopCases.Address__c},</text>
    </textTemplates>
    <textTemplates>
        <name>ChatterText</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Automated Email Sent: Contractor Rejection Notification
Sent: {!$Flow.InterviewStartTime}
To: {!$Record.Email}

{!$Record.FirstName},
While reviewing some of the properties you have serviced, we found {!caseCount} job(s) that we were unable to approve.

{!ChatterAddressList}

For any job we were not able to approve, you will see a 2nd-chance job on your schedule which needs to be completed within 48 hours. The notes on the 2nd chance job have specific details about what still needs to be done to make the job right.

If a 2nd chance job is not completed within that 48 hour time frame or if the reason for the rejection was not corrected, the job will remain rejected and will not be paid out.

As a reminder, jobs are rejected for the following three reasons: the quality expectations were not met, there was work left undone, or we were missing key photos.

Thanks for all you do,
TaskEasy</text>
    </textTemplates>
    <textTemplates>
        <name>EmailText</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;{!$Record.FirstName},&lt;/p&gt;&lt;p&gt;While reviewing some of the properties you have serviced, we found {!caseCount} job(s) that we were unable to approve.&lt;/p&gt;&lt;p&gt;{!EmailAddressList}&lt;/p&gt;&lt;p&gt;For any job we were not able to approve, you will see a 2nd-chance job on your schedule which needs to be completed within 48 hours. The notes on the 2nd chance job have specific details about what still needs to be done to make the job right.&lt;/p&gt;&lt;p&gt;If a 2nd chance job is not completed within that 48 hour time frame or if the reason for the rejection was not corrected, the job will remain rejected and will not be paid out.&lt;/p&gt;&lt;p&gt;As a reminder, jobs are rejected for the following three reasons: the quality expectations were not met, there was work left undone, or we were missing key photos.&lt;/p&gt;&lt;p&gt;Thanks for all you do,&lt;/p&gt;&lt;p&gt;TaskEasy&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>caseCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>ChatterAddressList</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>EmailAddressList</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
