<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>Add_date_to_collection</name>
        <label>Add date to collection</label>
        <locationX>2102</locationX>
        <locationY>2598</locationY>
        <assignmentItems>
            <assignToReference>DatesForBeforeScheduledDayTasks</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>NextWorkDayForAssignment</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>NextDateForTaskReminder</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NextWorkDayForAssignment</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Task_Schedule_Tasks_in_GIL_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_date_to_collection_0</name>
        <label>Add date to collection</label>
        <locationX>2342</locationX>
        <locationY>2751</locationY>
        <assignmentItems>
            <assignToReference>DatesForBeforeScheduledDayTasks</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>NextWorkDayForRepeatDays</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Task_Schedule_Tasks_in_GIL_0_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_max_date</name>
        <label>Assign max date</label>
        <locationX>2342</locationX>
        <locationY>2539</locationY>
        <assignmentItems>
            <assignToReference>NextDateForTaskReminder</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_max_used_date.ActivityDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_date_to_collection_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_start_date</name>
        <label>Assign start date</label>
        <locationX>1599</locationX>
        <locationY>2293</locationY>
        <assignmentItems>
            <assignToReference>DateForTaskReminder</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_task_day_been_assigned</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Day_Counter</name>
        <label>Update Day Counter</label>
        <locationX>1619</locationX>
        <locationY>2668</locationY>
        <assignmentItems>
            <assignToReference>DayCounter</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Has_task_day_been_assigned</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the &quot;New Task&quot; Record type ID</description>
        <name>TaskRecordTypeID</name>
        <dataType>String</dataType>
        <value>
            <stringValue>0126g0000018E0OAAU</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Has_task_day_been_assigned</name>
        <label>Has task day been assigned?</label>
        <locationX>1837</locationX>
        <locationY>2370</locationY>
        <defaultConnector>
            <targetReference>Is_Turn_Case_Status_QA_Pending</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Day_until_Scheduled_Date_larger</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NumberOfWeekdaysTilScheduledDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>DayCounter</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_date_in_collection_for_assignment</targetReference>
            </connector>
            <label>Is Day until Scheduled Date larger?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_case_status_new</name>
        <label>Is case status new?</label>
        <locationX>811</locationX>
        <locationY>780</locationY>
        <defaultConnector>
            <targetReference>is_turn_status_new</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_status_is_new</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_turn_status_to_New</targetReference>
            </connector>
            <label>Case status is new</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_contact_already_associated_to_case</name>
        <label>Is contact already associated to case?</label>
        <locationX>326</locationX>
        <locationY>653</locationY>
        <defaultConnector>
            <targetReference>Is_case_status_new</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Contact already associated</defaultConnectorLabel>
        <rules>
            <name>Contact_not_associated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Contact_is_already_contact_role</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Contact_role_to_case</targetReference>
            </connector>
            <label>Contact not associated</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_date_in_collection_for_assignment</name>
        <label>Is date in collection for assignment?</label>
        <locationX>2092</locationX>
        <locationY>2369</locationY>
        <defaultConnector>
            <targetReference>Add_date_to_collection</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Date_is_in_collection</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>DatesForBeforeScheduledDayTasks</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>NextWorkDayForAssignment</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_max_used_date</targetReference>
            </connector>
            <label>Date is in collection</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_there_contact_for_turn</name>
        <label>Is there contact for turn?</label>
        <locationX>646</locationX>
        <locationY>540</locationY>
        <defaultConnector>
            <targetReference>Is_case_status_new</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_contact</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Contact_is_already_contact_role</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Turn_Case_Status_Pending_Vendor_Acceptance</name>
        <label>Is Turn Case Status = Pending Vendor Acceptance?</label>
        <locationX>1092</locationX>
        <locationY>1771</locationY>
        <defaultConnector>
            <targetReference>Is_Turn_Case_Status_Vendor_Accepted</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Pending_Vendor_Acceptance</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Vendor Acceptance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_task_Vendor_signed_PandaDoc</targetReference>
            </connector>
            <label>Pending Vendor Acceptance</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Turn_Case_Status_QA_Accepted</name>
        <label>Is Turn Case Status = QA Accepted?</label>
        <locationX>1096</locationX>
        <locationY>3297</locationY>
        <defaultConnector>
            <targetReference>Set_case_status_to_In_Progress</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Create_QA_Accepted_Tasks</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>QA Accepted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_task_Notify_Finance</targetReference>
            </connector>
            <label>Create QA Accepted Tasks</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Turn_Case_Status_QA_Pending</name>
        <label>Is Turn Case Status = QA Pending?</label>
        <locationX>1095</locationX>
        <locationY>2843</locationY>
        <defaultConnector>
            <targetReference>Is_Turn_Case_Status_QA_Remedy</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Create_QA_Pending_Tasks</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>QA pending</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_task_Confirm_scope_of_work_was_completed_with_vendor</targetReference>
            </connector>
            <label>Create QA Pending Tasks</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Turn_Case_Status_QA_Remedy</name>
        <label>Is Turn Case Status = QA Remedy?</label>
        <locationX>1096</locationX>
        <locationY>3083</locationY>
        <defaultConnector>
            <targetReference>Is_Turn_Case_Status_QA_Accepted</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Create_QA_Remedy_Tasks</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>QA remedy</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_task_Remedy_any_necessary_issues_follow_up_with_client</targetReference>
            </connector>
            <label>Create QA Remedy Tasks</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Turn_Case_Status_Scheduled</name>
        <label>Is Turn Case Status = Scheduled?</label>
        <locationX>1085</locationX>
        <locationY>2226</locationY>
        <defaultConnector>
            <targetReference>Is_Turn_Case_Status_QA_Pending</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Create_Scheduled_Tasks</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Scheduled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Due_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Task_Assign_due_date_for_Task_Completion</targetReference>
            </connector>
            <label>Create Scheduled Tasks</label>
        </rules>
        <rules>
            <name>Scheduled_Date_set</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Due_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Scheduled</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_start_date</targetReference>
            </connector>
            <label>Scheduled Date set</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Turn_Case_Status_TE_Accepted</name>
        <label>Is Turn Case Status = TE Accepted?</label>
        <locationX>1094</locationX>
        <locationY>1512</locationY>
        <defaultConnector>
            <targetReference>Is_Turn_Case_Status_Pending_Vendor_Acceptance</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>TE_Accepted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TE Accepted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_task_Complete_Project_Punch_List_Tab</targetReference>
            </connector>
            <label>TE Accepted</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Turn_Case_Status_Vendor_Accepted</name>
        <label>Is Turn Case Status = Vendor Accepted?</label>
        <locationX>1090</locationX>
        <locationY>1993</locationY>
        <defaultConnector>
            <targetReference>Is_Turn_Case_Status_Scheduled</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Pending_Vendor_Acceptance_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Vendor Accepted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_task_Attach_signed_vendor_copy_to_case</targetReference>
            </connector>
            <label>Pending Vendor Acceptance</label>
        </rules>
    </decisions>
    <decisions>
        <description>Close case if turn is closed</description>
        <name>Is_turn_closed</name>
        <label>Is turn closed?</label>
        <locationX>819</locationX>
        <locationY>3591</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Turn_is_closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Close_case</targetReference>
            </connector>
            <label>Turn is closed</label>
        </rules>
    </decisions>
    <decisions>
        <name>is_turn_status_in_progress</name>
        <label>is turn status in progress?</label>
        <locationX>819</locationX>
        <locationY>1440</locationY>
        <defaultConnector>
            <targetReference>Is_turn_closed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not in progress</defaultConnectorLabel>
        <rules>
            <name>Turn_status_is_in_progress</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Turn_Case_Status_TE_Accepted</targetReference>
            </connector>
            <label>Turn status is in progress</label>
        </rules>
    </decisions>
    <decisions>
        <name>is_turn_status_new</name>
        <label>is turn status new?</label>
        <locationX>810</locationX>
        <locationY>1040</locationY>
        <defaultConnector>
            <targetReference>is_turn_status_in_progress</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Turn_status_is_in_new</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Turns_Status__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_turrns_case_owned_by_queue</targetReference>
            </connector>
            <label>Turn status is in new</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_turrns_case_owned_by_queue</name>
        <label>Is turrns case owned by queue?</label>
        <locationX>1103</locationX>
        <locationY>1097</locationY>
        <defaultConnector>
            <targetReference>Create_task_Respond_to_Client_with_Accept_or_Decline</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Case owned by user</defaultConnectorLabel>
        <rules>
            <name>Case_owned_by_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owned_by_Queue__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Reason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Turns Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_case_status_to_In_Progress_0</targetReference>
            </connector>
            <label>Case owned by Queue</label>
        </rules>
    </decisions>
    <formulas>
        <name>CaseContactRole</name>
        <dataType>String</dataType>
        <expression>CASE({!Get_contact.RecordType.Id} , &apos;0126g000000tbKjAAI&apos;, &apos;Client&apos;, &apos;0124X000001ySoXQAU&apos;, &apos;Client&apos;, &apos;Contractor&apos;)</expression>
    </formulas>
    <formulas>
        <name>NextWorkDay</name>
        <dataType>Date</dataType>
        <expression>CASE( 
  MOD( {!$Flow.CurrentDate} - DATE( 1900, 1, 7 ), 7 ),
  5, {!$Flow.CurrentDate} + 3,
  6, {!$Flow.CurrentDate} + 2,
  {!$Flow.CurrentDate} + 1)</expression>
    </formulas>
    <formulas>
        <name>NextWorkDayForAssignment</name>
        <dataType>Date</dataType>
        <expression>CASE( 
  MOD( {!TodayPlusScheduledDayCounter} - DATE( 1900, 1, 7 ), 7 ),
  6, {!TodayPlusScheduledDayCounter} + 2,
  0, {!TodayPlusScheduledDayCounter} + 1,
  {!TodayPlusScheduledDayCounter})</expression>
    </formulas>
    <formulas>
        <name>NextWorkDayForRepeatDays</name>
        <dataType>Date</dataType>
        <expression>CASE( 
  MOD( {!NextDateForTaskReminder} + 1 - DATE( 1900, 1, 7 ), 7 ),
  6, {!NextDateForTaskReminder} + 3,
  0, {!NextDateForTaskReminder} + 2,
{!NextDateForTaskReminder}+1)</expression>
    </formulas>
    <formulas>
        <name>NumberOfWeekdaysTilScheduledDate</name>
        <dataType>Number</dataType>
        <expression>(5 * ( FLOOR( (  {!$Record.Due_Date__c} - DATE( 1900, 1, 8) ) / 7 ) ) + MIN( 5, MOD( {!$Record.Due_Date__c} - DATE( 1900,
1, 8), 7 ) ) )
-
(5 * ( FLOOR( ( today()- DATE( 1900, 1, 8) ) / 7 ) ) + MIN( 5, MOD( today()  - DATE( 1900,
1, 8), 7 ) ) )</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>TodayPlusScheduledDayCounter</name>
        <dataType>Date</dataType>
        <expression>{!DateForTaskReminder} + {!DayCounter}</expression>
    </formulas>
    <interviewLabel>Case - After - Turns Cases {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - After - Turns Cases</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Add_Contact_role_to_case</name>
        <label>Add Contact role to case</label>
        <locationX>490</locationX>
        <locationY>969</locationY>
        <connector>
            <targetReference>Is_case_status_new</targetReference>
        </connector>
        <inputAssignments>
            <field>CasesId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>$Record.Contact.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Role</field>
            <value>
                <elementReference>CaseContactRole</elementReference>
            </value>
        </inputAssignments>
        <object>CaseContactRole</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_Assign_due_date_for_Task_Completion</name>
        <label>Create Task Assign due date for Task Completion</label>
        <locationX>1250</locationX>
        <locationY>2370</locationY>
        <connector>
            <targetReference>Create_Task_Reply_with_Scheduled_dates_to_client</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Assign due date for Task Completion</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_Assign_Tasks_in_GIL</name>
        <label>Create Task Assign Tasks in GIL</label>
        <locationX>1717</locationX>
        <locationY>1999</locationY>
        <connector>
            <targetReference>Create_Task_Schedule_Tasks_in_GIL</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Assign Tasks in GIL</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Assign_vendors_on_Project_Punch_List_Tab</name>
        <label>Create task Assign vendors on Project Punch List Tab</label>
        <locationX>1609</locationX>
        <locationY>1651</locationY>
        <connector>
            <targetReference>Create_task_Download_PDF_Send_to_vendor_s_via_PandaDoc</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Assign vendors on Project Punch List Tab</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Attach_signed_vendor_copy_to_case</name>
        <label>Create task Attach signed vendor copy to case</label>
        <locationX>1365</locationX>
        <locationY>2000</locationY>
        <connector>
            <targetReference>Create_Tasks_in_GIL</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Attach signed vendor copy to case</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>Get_contact.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Complete_Project_Punch_List_Tab</name>
        <label>Create task Complete Project Punch List Tab</label>
        <locationX>1292</locationX>
        <locationY>1505</locationY>
        <connector>
            <targetReference>Create_task_Notify_Cleans_team_of_Clean_if_present_on_SOW</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Complete Project Punch List Tab</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Confirm_scope_of_work_was_completed_with_vendor</name>
        <label>Create task Confirm scope of work was completed with vendor</label>
        <locationX>1555</locationX>
        <locationY>2842</locationY>
        <connector>
            <targetReference>Create_task_Notify_client_the_repair_work_has_been_completed_notify_if_any_outst</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Confirm scope of work was completed with vendor</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Download_PDF_Send_to_vendor_s_via_PandaDoc</name>
        <label>Create task Download PDF &amp; Send to vendor(s) via PandaDoc</label>
        <locationX>1446</locationX>
        <locationY>1651</locationY>
        <connector>
            <targetReference>Is_Turn_Case_Status_Pending_Vendor_Acceptance</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Transfer Client Scope of Work to TE Scope of Work</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Notify_Cleans_team_of_Clean_if_present_on_SOW</name>
        <label>Create task Notify Cleans team of Clean if present on SOW</label>
        <locationX>1454</locationX>
        <locationY>1504</locationY>
        <connector>
            <targetReference>Create_task_Transfer_Client_Scope_of_Work_to_TE_Scope_of_Work</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Notify Cleans team of Clean if present on SOW</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Notify_client_the_repair_work_has_been_completed_notify_if_any_outst</name>
        <label>Create task Notify client the repair work has been completed &amp; notify if any outstanding work (cleans or landscaping) is still pending</label>
        <locationX>1740</locationX>
        <locationY>2935</locationY>
        <connector>
            <targetReference>Is_Turn_Case_Status_QA_Remedy</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Notify client the repair work has been completed &amp; notify if any outstanding work (cleans or landscaping) is still pending. Include dates.</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Notify_Finance</name>
        <label>Create task Notify Finance</label>
        <locationX>1556</locationX>
        <locationY>3296</locationY>
        <connector>
            <targetReference>Create_task_Notify_Quality_Control</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>NextWorkDay</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Notify Finance</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Notify_Quality_Control</name>
        <label>Create task Notify Quality Control</label>
        <locationX>1740</locationX>
        <locationY>3389</locationY>
        <connector>
            <targetReference>Set_case_status_to_In_Progress</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>NextWorkDay</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Notify Quality Control</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Remedy_any_necessary_issues_follow_up_with_client</name>
        <label>Create task Remedy any necessary issues &amp; follow up with client</label>
        <locationX>1542</locationX>
        <locationY>3094</locationY>
        <connector>
            <targetReference>Is_Turn_Case_Status_QA_Accepted</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>NextWorkDay</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Remedy any necessary issues &amp; follow up with client</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_Reply_with_Scheduled_dates_to_client</name>
        <label>Create Task Reply with Scheduled dates to client</label>
        <locationX>1255</locationX>
        <locationY>2554</locationY>
        <connector>
            <targetReference>Is_Turn_Case_Status_QA_Pending</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Reply with Scheduled dates to client</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Respond_to_Client_with_Accept_or_Decline</name>
        <label>Create task Respond to Client with Accept or Decline</label>
        <locationX>1392</locationX>
        <locationY>1182</locationY>
        <connector>
            <targetReference>Set_case_status_to_In_Progress_0</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Respond to Client with Accept or Decline</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_Schedule_Tasks_in_GIL</name>
        <label>Create Task Schedule Tasks in GIL</label>
        <locationX>1714</locationX>
        <locationY>2144</locationY>
        <connector>
            <targetReference>Is_Turn_Case_Status_Scheduled</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Schedule Tasks in GIL</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_Schedule_Tasks_in_GIL_0</name>
        <label>Create Task Schedule Tasks in GIL</label>
        <locationX>1893</locationX>
        <locationY>2598</locationY>
        <connector>
            <targetReference>Update_Day_Counter</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>NextWorkDayForAssignment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>DailyReminderSubject</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Task_Schedule_Tasks_in_GIL_0_0</name>
        <label>Create Task Schedule Tasks in GIL</label>
        <locationX>1887</locationX>
        <locationY>2752</locationY>
        <connector>
            <targetReference>Update_Day_Counter</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>NextWorkDayForRepeatDays</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>DailyReminderSubject</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Transfer_Client_Scope_of_Work_to_TE_Scope_of_Work</name>
        <label>Create task Transfer Client Scope of Work to TE Scope of Work</label>
        <locationX>1624</locationX>
        <locationY>1506</locationY>
        <connector>
            <targetReference>Create_task_Assign_vendors_on_Project_Punch_List_Tab</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Transfer Client Scope of Work to TE Scope of Work</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_task_Vendor_signed_PandaDoc</name>
        <label>Create task Vendor signed PandaDoc</label>
        <locationX>1444</locationX>
        <locationY>1779</locationY>
        <connector>
            <targetReference>Is_Turn_Case_Status_Vendor_Accepted</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>NextWorkDay</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Vendor signed PandaDoc</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Follow Up</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Tasks_in_GIL</name>
        <label>Create Tasks in GIL</label>
        <locationX>1562</locationX>
        <locationY>1998</locationY>
        <connector>
            <targetReference>Create_Task_Assign_Tasks_in_GIL</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordTypeID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Create Tasks in GIL</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Contact_is_already_contact_role</name>
        <label>Contact is already contact role</label>
        <locationX>491</locationX>
        <locationY>552</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_contact_already_associated_to_case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CasesId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ContactId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CaseContactRole</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_contact</name>
        <label>Get contact</label>
        <locationX>656</locationX>
        <locationY>383</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_there_contact_for_turn</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_max_used_date</name>
        <label>Get max used date</label>
        <locationX>2341</locationX>
        <locationY>2371</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_max_date</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ActivityDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>NextWorkDayForAssignment</elementReference>
            </value>
        </filters>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Subject</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Scheduled Date</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <sortField>ActivityDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Close case if turn is closec</description>
        <name>Close_case</name>
        <label>Close case</label>
        <locationX>525</locationX>
        <locationY>3585</locationY>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Close case if turn is closec</description>
        <name>Set_case_status_to_In_Progress</name>
        <label>Set case status to In Progress</label>
        <locationX>1106</locationX>
        <locationY>3588</locationY>
        <connector>
            <targetReference>Is_turn_closed</targetReference>
        </connector>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Close case if turn is closec</description>
        <name>Set_case_status_to_In_Progress_0</name>
        <label>Set case status to In Progress</label>
        <locationX>975</locationX>
        <locationY>1280</locationY>
        <connector>
            <targetReference>is_turn_status_in_progress</targetReference>
        </connector>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Close case if turn is closec</description>
        <name>Set_turn_status_to_New</name>
        <label>Set Turn status to In New</label>
        <locationX>1126</locationX>
        <locationY>887</locationY>
        <connector>
            <targetReference>is_turn_status_new</targetReference>
        </connector>
        <inputAssignments>
            <field>Turns_Status__c</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>531</locationX>
        <locationY>33</locationY>
        <connector>
            <targetReference>Get_contact</targetReference>
        </connector>
        <filterLogic>1 or (2 and 3)</filterLogic>
        <filters>
            <field>RecordTypeDeveloperName__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Turns</stringValue>
            </value>
        </filters>
        <filters>
            <field>Due_Date__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Turns_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Scheduled</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>DailyReminderSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Daily Reminder ({!NextDateForTaskReminder}) until Scheduled Date ({!$Record.Due_Date__c})</text>
    </textTemplates>
    <textTemplates>
        <name>DailyReminderSubjectRepeatdates</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Daily Reminder ({!NextWorkDayForRepeatDays}) until Scheduled Date ({!$Record.Due_Date__c})</text>
    </textTemplates>
    <textTemplates>
        <description>Validates if case resolution reason is set after case is set to closed.</description>
        <name>ValiidateCaseResolutionReason</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;The case reason and case resolution reason must be selected before you can save any case as closed.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>DateForTaskReminder</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>DatesForBeforeScheduledDayTasks</name>
        <dataType>Date</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>DayCounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>NextDateForTaskReminder</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RepeatDates</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
